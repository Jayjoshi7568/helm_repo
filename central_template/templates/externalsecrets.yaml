{{- if .Values.externalSecrets.enable -}}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.externalSecrets.name}}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "2"
spec:
  # Reference the already configured ClusterSecretStore
  secretStoreRef:
    name: {{ .Values.externalSecrets.secretStoreName }}  # Reference to the pre-configured ClusterSecretStore
    kind: ClusterSecretStore  # Specify it's a ClusterSecretStore

  target:
    name: {{ .Values.externalSecrets.secretName }}  # Name of the Kubernetes Secret that will be created
    creationPolicy: {{ .Values.externalSecrets.secretCreationPolicy | default "Owner" }}  # Options: "Owner", "Merge"

  # Data mapping section (This section will fetch secrets or parameters from the external store)
  dataFrom:
    - extract:
        key: {{ .Values.externalSecrets.externalSecretName }}  # External secret name from the provider
{{- end}}